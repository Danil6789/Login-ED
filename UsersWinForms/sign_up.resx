<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>